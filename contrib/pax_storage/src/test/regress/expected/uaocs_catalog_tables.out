-- create functions to query uaocs auxiliary tables through gp_dist_random instead of going through utility mode
CREATE OR REPLACE FUNCTION gp_aocsseg_dist_random(
  IN relation_name text) RETURNS setof record AS $$
DECLARE
  record_text text;
  result record;
BEGIN
  for record_text in
      EXECUTE 'select gp_toolkit.__gp_aocsseg(''' || relation_name || '''::regclass)::text from gp_dist_random(''gp_id'');'
  loop
      EXECUTE 'select a[3], a[4], a[5], a[6], a[7], a[8] from
              (select regexp_split_to_array(''' || record_text ||''', '','')) as dt(a);' into result;
      return next result;
  end loop;
  return;
END;
$$ LANGUAGE plpgsql;
-- Verify empty visimap for uaocs table
create table uaocs_table_check_empty_visimap (i int, j varchar(20), k int ) with (appendonly=true, orientation=column) DISTRIBUTED BY (i);
insert into uaocs_table_check_empty_visimap values(1,'test',2);
select 1 from pg_appendonly where visimapidxid is not null and visimapidxid is not NULL and relid='uaocs_table_check_empty_visimap'::regclass;
 ?column? 
----------
        1
(1 row)

-- Verify the hidden tup_count using UDF gp_aovisimap_hidden_info(oid) for uaocs relation after delete and vacuum
create table uaocs_table_check_hidden_tup_count_after_delete(i int, j varchar(20), k int ) with (appendonly=true, orientation=column) DISTRIBUTED BY (i);
insert into uaocs_table_check_hidden_tup_count_after_delete select i,'aa'||i,i+10 from generate_series(1,10) as i;
select * from gp_toolkit.__gp_aovisimap_hidden_info('uaocs_table_check_hidden_tup_count_after_delete'::regclass);
 segno | hidden_tupcount | total_tupcount 
-------+-----------------+----------------
     1 |               0 |              1
     1 |               0 |              4
     1 |               0 |              5
(3 rows)

delete from uaocs_table_check_hidden_tup_count_after_delete where i = 1;
select * from gp_toolkit.__gp_aovisimap_hidden_info('uaocs_table_check_hidden_tup_count_after_delete'::regclass);
 segno | hidden_tupcount | total_tupcount 
-------+-----------------+----------------
     1 |               1 |              1
     1 |               0 |              5
     1 |               0 |              4
(3 rows)

vacuum full uaocs_table_check_hidden_tup_count_after_delete;
select segno,hidden_tupcount from gp_toolkit.__gp_aovisimap_hidden_info('uaocs_table_check_hidden_tup_count_after_delete'::regclass);
 segno | hidden_tupcount 
-------+-----------------
     1 |               0
     2 |               0
     1 |               0
     1 |               0
(4 rows)

select * from uaocs_table_check_hidden_tup_count_after_delete;
NOTICE:  One or more columns in the following table(s) do not have statistics: uaocs_table_check_hidden_tup_count_after_delete
HINT:  For non-partitioned tables, run analyze <table_name>(<column_list>). For partitioned tables, run analyze rootpartition <table_name>(<column_list>). See log for columns missing statistics.
 i  |  j   | k  
----+------+----
  2 | aa2  | 12
  3 | aa3  | 13
  4 | aa4  | 14
  7 | aa7  | 17
  8 | aa8  | 18
  5 | aa5  | 15
  6 | aa6  | 16
  9 | aa9  | 19
 10 | aa10 | 20
(9 rows)

-- Verify the hidden tup_count using UDF gp_aovisimap_hidden_info(oid) for uaocs relation after update and vacuum
create table uaocs_table_check_hidden_tup_count_after_update(i int, j varchar(20), k int ) with (appendonly=true, orientation=column) DISTRIBUTED BY (i);
insert into uaocs_table_check_hidden_tup_count_after_update select i,'aa'||i,i+10 from generate_series(1,10) as i;
select * from gp_toolkit.__gp_aovisimap_hidden_info('uaocs_table_check_hidden_tup_count_after_update'::regclass);
 segno | hidden_tupcount | total_tupcount 
-------+-----------------+----------------
     1 |               0 |              5
     1 |               0 |              4
     1 |               0 |              1
(3 rows)

update uaocs_table_check_hidden_tup_count_after_update set j = 'test_update';
select * from gp_toolkit.__gp_aovisimap_hidden_info('uaocs_table_check_hidden_tup_count_after_update'::regclass);
 segno | hidden_tupcount | total_tupcount 
-------+-----------------+----------------
     1 |               5 |             10
     1 |               1 |              2
     1 |               4 |              8
(3 rows)

vacuum full uaocs_table_check_hidden_tup_count_after_update;
select segno,hidden_tupcount from gp_toolkit.__gp_aovisimap_hidden_info('uaocs_table_check_hidden_tup_count_after_update'::regclass);
 segno | hidden_tupcount 
-------+-----------------
     1 |               0
     2 |               0
     1 |               0
     2 |               0
     1 |               0
     2 |               0
(6 rows)

select * from uaocs_table_check_hidden_tup_count_after_update;
NOTICE:  One or more columns in the following table(s) do not have statistics: uaocs_table_check_hidden_tup_count_after_update
HINT:  For non-partitioned tables, run analyze <table_name>(<column_list>). For partitioned tables, run analyze rootpartition <table_name>(<column_list>). See log for columns missing statistics.
 i  |      j      | k  
----+-------------+----
  5 | test_update | 15
  6 | test_update | 16
  9 | test_update | 19
 10 | test_update | 20
  2 | test_update | 12
  3 | test_update | 13
  4 | test_update | 14
  7 | test_update | 17
  8 | test_update | 18
  1 | test_update | 11
(10 rows)

