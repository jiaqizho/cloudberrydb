-- @Description Ensures that an alter table while a vacuum operation is ok
--
CREATE TABLE alter_while_vacuum2_pax_column (a INT, b INT);
CREATE
INSERT INTO alter_while_vacuum2_pax_column SELECT i as a, i as b FROM generate_series(1, 100000) AS i;
INSERT 100000
INSERT INTO alter_while_vacuum2_pax_column SELECT i as a, i as b FROM generate_series(1, 100000) AS i;
INSERT 100000
INSERT INTO alter_while_vacuum2_pax_column SELECT i as a, i as b FROM generate_series(1, 100000) AS i;
INSERT 100000
INSERT INTO alter_while_vacuum2_pax_column SELECT i as a, i as b FROM generate_series(1, 100000) AS i;
INSERT 100000
INSERT INTO alter_while_vacuum2_pax_column SELECT i as a, i as b FROM generate_series(1, 100000) AS i;
INSERT 100000
INSERT INTO alter_while_vacuum2_pax_column SELECT i as a, i as b FROM generate_series(1, 100000) AS i;
INSERT 100000

DELETE FROM alter_while_vacuum2_pax_column WHERE a < 12000;
DELETE 71994
1: SELECT COUNT(*) FROM alter_while_vacuum2_pax_column;
 count  
--------
 528006 
(1 row)
2>: VACUUM alter_while_vacuum2_pax_column;  <waiting ...>
1: Alter table alter_while_vacuum2_pax_column set distributed randomly;
ALTER
2<:  <... completed>
VACUUM
1: SELECT COUNT(*) FROM alter_while_vacuum2_pax_column WHERE a < 12010;
 count 
-------
 60    
(1 row)
