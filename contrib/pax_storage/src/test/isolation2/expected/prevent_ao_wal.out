-- For AO/AOCO tables, their WAL records are only
-- generated for replication purposes (they are not used for crash
-- recovery because AO/AOCO table operations are crash-safe). To decrease
-- disk space usage and to improve performance of AO/AOCO operations, we
-- suppress generation of XLOG_APPENDONLY_INSERT and
-- XLOG_APPENDONLY_TRUNCATE WAL records when wal_level=minimal is
-- specified.
-- This test is supposed to ensure that XLOG_APPENDONLY_INSERT and
-- XLOG_APPENDONLY_TRUNCATE WAL records are not generated when
-- wal_level=minimal is set.
-- Because on mirrored cluster primary segments have replication slots
-- and that conflict with the wal_level=minimal GUC
-- we connect to coordinator in utility mode for AO/AOCO operations and
-- validate WAL records on the coordinator.

GP_IGNORE: formatted by atmsort.pm
-- start_matchignore
-- m/pg_waldump: fatal: error in WAL record at */
-- m/.*The 'DISTRIBUTED BY' clause determines the distribution of data*/
-- m/.*Table doesn't have 'DISTRIBUTED BY' clause*/
-- end_matchignore
GP_IGNORE: defined new match expression

-- Create tables (AO, AOCO)
-1U: CREATE TABLE ao_foo (n int) WITH (appendonly=true);
CREATE
-1U: CREATE TABLE aoco_foo (n int, m int) WITH (appendonly=true, orientation=column);
CREATE

-- Switch WAL file
-1U: SELECT true FROM pg_switch_wal();
 bool 
------
 t    
(1 row)
-- Insert data (AO)
-1U: INSERT INTO ao_foo SELECT generate_series(1,10);
INSERT 10
-- Insert data (AOCO)
-1U: INSERT INTO aoco_foo SELECT generate_series(1,10), generate_series(1,10);
INSERT 10
-- Delete data and run vacuum (AO)
-1U: DELETE FROM ao_foo WHERE n > 5;
DELETE 5
-1U: VACUUM;
VACUUM
-- Delete data and run vacuum (AOCO)
-1U: DELETE FROM aoco_foo WHERE n > 5;
DELETE 5
-1U: VACUUM;
VACUUM
-1Uq: ... <quitting>

-- Validate wal records
! last_wal_file=$(psql -At -c "SELECT pg_walfile_name(pg_current_wal_lsn())" postgres) && pg_waldump ${last_wal_file} -p ${COORDINATOR_DATA_DIRECTORY}/pg_wal -r appendonly;
rmgr: Appendonly  len (rec/tot):    194/   194, tx:       1141, lsn: 0/10000130, prev 0/100000E0, desc: APPENDONLY_INSERT insert: rel 1663/17018/90146 seg/offset:0/0 len:136
rmgr: Appendonly  len (rec/tot):     58/    58, tx:       1142, lsn: 0/10000378, prev 0/10000338, desc: APPENDONLY_INSERT insert: rel 1663/17018/90150 seg/offset:128/0 len:0
rmgr: Appendonly  len (rec/tot):    138/   138, tx:       1142, lsn: 0/10000408, prev 0/100003B8, desc: APPENDONLY_INSERT insert: rel 1663/17018/90150 seg/offset:0/0 len:80
rmgr: Appendonly  len (rec/tot):    138/   138, tx:       1142, lsn: 0/10000498, prev 0/10000408, desc: APPENDONLY_INSERT insert: rel 1663/17018/90150 seg/offset:128/0 len:80
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/1050AE20, prev 0/1050ADA8, desc: APPENDONLY_TRUNCATE truncate: rel 1663/17018/90150 seg/offset:0/80
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/1050AE60, prev 0/1050AE20, desc: APPENDONLY_TRUNCATE truncate: rel 1663/17018/90150 seg/offset:128/80
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/1052B320, prev 0/1052B2A8, desc: APPENDONLY_TRUNCATE truncate: rel 1663/17018/90146 seg/offset:0/136
rmgr: Appendonly  len (rec/tot):     58/    58, tx:       1145, lsn: 0/1052B458, prev 0/1052B418, desc: APPENDONLY_INSERT insert: rel 1663/17018/90146 seg/offset:1/0 len:0
rmgr: Appendonly  len (rec/tot):    146/   146, tx:       1145, lsn: 0/1052B620, prev 0/1052B5E0, desc: APPENDONLY_INSERT insert: rel 1663/17018/90146 seg/offset:1/0 len:88
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/1052B758, prev 0/1052B728, desc: APPENDONLY_TRUNCATE truncate: rel 1663/17018/90146 seg/offset:0/0
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/1058CA50, prev 0/1058CA10, desc: APPENDONLY_TRUNCATE truncate: rel 1663/17018/90150 seg/offset:0/80
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/1058CA90, prev 0/1058CA50, desc: APPENDONLY_TRUNCATE truncate: rel 1663/17018/90150 seg/offset:128/80
rmgr: Appendonly  len (rec/tot):     58/    58, tx:       1149, lsn: 0/1058CBE8, prev 0/1058CBA8, desc: APPENDONLY_INSERT insert: rel 1663/17018/90150 seg/offset:1/0 len:0
rmgr: Appendonly  len (rec/tot):     58/    58, tx:       1149, lsn: 0/1058CC28, prev 0/1058CBE8, desc: APPENDONLY_INSERT insert: rel 1663/17018/90150 seg/offset:129/0 len:0
rmgr: Appendonly  len (rec/tot):    122/   122, tx:       1149, lsn: 0/1058CDF0, prev 0/1058CDB0, desc: APPENDONLY_INSERT insert: rel 1663/17018/90150 seg/offset:1/0 len:64
rmgr: Appendonly  len (rec/tot):    122/   122, tx:       1149, lsn: 0/1058CE70, prev 0/1058CDF0, desc: APPENDONLY_INSERT insert: rel 1663/17018/90150 seg/offset:129/0 len:64
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/1058CFA8, prev 0/1058CF78, desc: APPENDONLY_TRUNCATE truncate: rel 1663/17018/90150 seg/offset:0/0
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/1058CFE8, prev 0/1058CFA8, desc: APPENDONLY_TRUNCATE truncate: rel 1663/17018/90150 seg/offset:128/0
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/105AD540, prev 0/105AD510, desc: APPENDONLY_TRUNCATE truncate: rel 1663/17018/90146 seg/offset:1/88
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/105AD580, prev 0/105AD540, desc: APPENDONLY_TRUNCATE truncate: rel 1663/17018/90146 seg/offset:0/0


-- *********** Set wal_level=minimal **************
!\retcode gpconfig -c wal_level -v minimal --masteronly;
(exited with code 0)
-- Set max_wal_senders to 0 because a non-zero value requires wal_level >= 'archive'
!\retcode gpconfig -c max_wal_senders -v 0 --masteronly;
(exited with code 0)
-- Restart QD
!\retcode pg_ctl -l /dev/null -D $COORDINATOR_DATA_DIRECTORY restart -w -t 600 -m fast;
(exited with code 0)

-- Switch WAL file
-1U: SELECT true FROM pg_switch_wal();
 bool 
------
 t    
(1 row)
-- Insert data (AO)
-1U: INSERT INTO ao_foo SELECT generate_series(1,10);
INSERT 10
-- Insert data (AOCO)
-1U: INSERT INTO aoco_foo SELECT generate_series(1,10), generate_series(1,10);
INSERT 10
-- Delete data and run vacuum (AO)
-1U: DELETE FROM ao_foo WHERE n > 5;
DELETE 5
-1U: VACUUM;
VACUUM
-- Delete data and run vacuum (AOCO)
-1U: DELETE FROM aoco_foo WHERE n > 5;
DELETE 5
-1U: VACUUM;
VACUUM

-- Validate wal records
! last_wal_file=$(psql -At -c "SELECT pg_walfile_name(pg_current_wal_lsn())" postgres) && pg_waldump ${last_wal_file} -p ${COORDINATOR_DATA_DIRECTORY}/pg_wal -r appendonly;


-1U: DROP TABLE ao_foo;
DROP
-1U: DROP TABLE aoco_foo;
DROP

-- Reset wal_level
!\retcode gpconfig -r wal_level --masteronly;
(exited with code 0)
-- Reset max_wal_senders
!\retcode gpconfig -r max_wal_senders --masteronly;
(exited with code 0)
-- Restart QD
!\retcode pg_ctl -l /dev/null -D $COORDINATOR_DATA_DIRECTORY restart -w -t 600 -m fast;
(exited with code 0)
