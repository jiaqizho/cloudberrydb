-- start_matchignore
-- m/LOG:  statement:/
-- m/no filter/
-- m/bloom filter/
-- m/No sparse filter/
-- end_matchignore
set default_table_access_method to pax;
set pax_enable_debug to on;
set pax_enable_sparse_filter to on;
create  or replace function intrc(iint int)
 returns int as $$ 
 begin return iint; end;
 $$ language plpgsql;
create  or replace function falserc(iint int)
 returns bool as $$ 
 begin return false; end;
 $$ language plpgsql;
create table t1(same int, v1 int, v2 int, v3 int, v4 int) using pax with (minmax_columns='v1,v2,v3,v4');
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'same' as the Cloudberry Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create table t2(same int, v1 int, v2 int, v3 int, v4 int) using pax with (minmax_columns='v1,v2,v3,v4');
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'same' as the Cloudberry Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create table t_allnull(v1 int, v2 int, v3 int, v4 int) using pax with (minmax_columns='v1,v2,v3,v4');
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'v1' as the Cloudberry Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
-- two file with minmax(1,400) and minmax(401,800)
insert into t1 values(1, generate_series(1, 100), generate_series(101, 200), generate_series(201, 300), generate_series(301, 400));
insert into t1 values(1, generate_series(401, 500), generate_series(501, 600), generate_series(601, 700), generate_series(701, 800));
insert into t2 values(1, generate_series(1, 100), generate_series(101, 200), generate_series(201, 300), generate_series(301, 400));
insert into t2 values(1, generate_series(401, 500), generate_series(501, 600), generate_series(601, 700), generate_series(701, 800));
insert into t_allnull select null from generate_series(1,100);
insert into t_allnull select null from generate_series(1,100);
set client_min_messages to log;
-- no filter
select count(*) from t1;
LOG:  statement: select count(*) from t1;
 count 
-------
   200
(1 row)

select count(v1) from t1;
LOG:  statement: select count(v1) from t1;
 count 
-------
   200
(1 row)

select count(1) from t1;
LOG:  statement: select count(1) from t1;
 count 
-------
   200
(1 row)

select count(*) from t_allnull;
LOG:  statement: select count(*) from t_allnull;
 count 
-------
   200
(1 row)

select count(v1) from t_allnull;
LOG:  statement: select count(v1) from t_allnull;
 count 
-------
     0
(1 row)

select count(1) from t_allnull;
LOG:  statement: select count(1) from t_allnull;
 count 
-------
   200
(1 row)

-- basic tests
select count(*) from t1 where v1 > 1 and v1 < 10;
LOG:  statement: select count(*) from t1 where v1 > 1 and v1 < 10;
LOG:  kind file, filter rate: 1 / 2
 count 
-------
     8
(1 row)

select count(*) from t1 where v1 >= 1 and v1 <= 10;
LOG:  statement: select count(*) from t1 where v1 >= 1 and v1 <= 10;
LOG:  kind file, filter rate: 1 / 2
 count 
-------
    10
(1 row)

select count(*) from t1 where v1 > 1 and v2 < 110;
LOG:  statement: select count(*) from t1 where v1 > 1 and v2 < 110;
LOG:  kind file, filter rate: 1 / 2
 count 
-------
     8
(1 row)

select count(*) from t1 where v1 >= 1 and v2 <= 110;
LOG:  statement: select count(*) from t1 where v1 >= 1 and v2 <= 110;
LOG:  kind file, filter rate: 1 / 2
 count 
-------
    10
(1 row)

select count(*) from t1 where v1 is not null;
LOG:  statement: select count(*) from t1 where v1 is not null;
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   200
(1 row)

select count(*) from t1 where v1 is null;
LOG:  statement: select count(*) from t1 where v1 is null;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where (v1 < 10 and intrc(v2) in (101, 1223, 321));
LOG:  statement: select count(*) from t1 where (v1 < 10 and intrc(v2) in (101, 1223, 321));
LOG:  kind file, filter rate: 1 / 2
 count 
-------
     1
(1 row)

select count(*) from t1 where v1 > 90 or v1 < 10;
LOG:  statement: select count(*) from t1 where v1 > 90 or v1 < 10;
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   119
(1 row)

select count(*) from t1 where v1 >= 90 or v1 <= 10;
LOG:  statement: select count(*) from t1 where v1 >= 90 or v1 <= 10;
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   121
(1 row)

select count(*) from t1 where v1 > 90 or v2 < 110;
LOG:  statement: select count(*) from t1 where v1 > 90 or v2 < 110;
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   119
(1 row)

select count(*) from t1 where v1 >= 90 or v2 <= 110;
LOG:  statement: select count(*) from t1 where v1 >= 90 or v2 <= 110;
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   121
(1 row)

select count(*) from t1 where v1 = 1 and v2 < 110;
LOG:  statement: select count(*) from t1 where v1 = 1 and v2 < 110;
LOG:  kind file, filter rate: 1 / 2
 count 
-------
     1
(1 row)

select count(*) from t1 where v1 > 1 and v2 = 110;
LOG:  statement: select count(*) from t1 where v1 > 1 and v2 = 110;
LOG:  kind file, filter rate: 1 / 2
 count 
-------
     1
(1 row)

select count(*) from t1 where v1 = 1 or v2 < 110;
LOG:  statement: select count(*) from t1 where v1 = 1 or v2 < 110;
LOG:  kind file, filter rate: 1 / 2
 count 
-------
     9
(1 row)

select count(*) from t1 where v1 > 1 or v2 = 110;
LOG:  statement: select count(*) from t1 where v1 > 1 or v2 = 110;
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   199
(1 row)

-- invert the var and const(pg optimizer won't invert expr in plan)
select count(*) from t1 where 1 < v1 and 10 > v1;
LOG:  statement: select count(*) from t1 where 1 < v1 and 10 > v1;
LOG:  kind file, filter rate: 1 / 2
 count 
-------
     8
(1 row)

select count(*) from t1 where 1 <= v1 and 10 >= v1;
LOG:  statement: select count(*) from t1 where 1 <= v1 and 10 >= v1;
LOG:  kind file, filter rate: 1 / 2
 count 
-------
    10
(1 row)

select count(*) from t1 where 1 < v1 and 110 > v2;
LOG:  statement: select count(*) from t1 where 1 < v1 and 110 > v2;
LOG:  kind file, filter rate: 1 / 2
 count 
-------
     8
(1 row)

select count(*) from t1 where 1 <= v1 and 110 >= v2;
LOG:  statement: select count(*) from t1 where 1 <= v1 and 110 >= v2;
LOG:  kind file, filter rate: 1 / 2
 count 
-------
    10
(1 row)

select count(*) from t1 where 90 < v1 or 10 > v1;
LOG:  statement: select count(*) from t1 where 90 < v1 or 10 > v1;
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   119
(1 row)

select count(*) from t1 where 90 <= v1 or 10 >= v1;
LOG:  statement: select count(*) from t1 where 90 <= v1 or 10 >= v1;
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   121
(1 row)

select count(*) from t1 where 90 < v1 or 110 > v2;
LOG:  statement: select count(*) from t1 where 90 < v1 or 110 > v2;
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   119
(1 row)

select count(*) from t1 where 90 <= v1 or 110 >= v2;
LOG:  statement: select count(*) from t1 where 90 <= v1 or 110 >= v2;
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   121
(1 row)

select count(*) from t1 where 1 = v1 and 110 > v2;
LOG:  statement: select count(*) from t1 where 1 = v1 and 110 > v2;
LOG:  kind file, filter rate: 1 / 2
 count 
-------
     1
(1 row)

select count(*) from t1 where 1 < v1 and 110 = v2;
LOG:  statement: select count(*) from t1 where 1 < v1 and 110 = v2;
LOG:  kind file, filter rate: 1 / 2
 count 
-------
     1
(1 row)

-- nested exprs
select count(*) from t1 where v1 > 90 and (v1 > 10 or v1 < 20);
LOG:  statement: select count(*) from t1 where v1 > 90 and (v1 > 10 or v1 < 20);
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   110
(1 row)

select count(*) from t1 where v1 > 10 and (v2 > 110 or v2 < 120);
LOG:  statement: select count(*) from t1 where v1 > 10 and (v2 > 110 or v2 < 120);
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   190
(1 row)

select count(*) from t1 where v1 > 90 or (v1 > 10 and v1 < 20);
LOG:  statement: select count(*) from t1 where v1 > 90 or (v1 > 10 and v1 < 20);
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   119
(1 row)

select count(*) from t1 where v1 > 10 or (v2 > 110 and v2 < 120);
LOG:  statement: select count(*) from t1 where v1 > 10 or (v2 > 110 and v2 < 120);
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   190
(1 row)

select count(*) from t1 where v1 > 90 or (v1 > 10 and (v1 < 20 or v2 < 120));
LOG:  statement: select count(*) from t1 where v1 > 90 or (v1 > 10 and (v1 < 20 or v2 < 120));
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   119
(1 row)

select count(*) from t1 where v1 > 90 and (v1 > 10 or (v1 < 20 and v2 < 120));
LOG:  statement: select count(*) from t1 where v1 > 90 and (v1 > 10 or (v1 < 20 and v2 < 120));
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   110
(1 row)

select count(*) from t1 where v1 > 90 and (v1 > 10 or (v1 < 20 and intrc(v2) < 120));
LOG:  statement: select count(*) from t1 where v1 > 90 and (v1 > 10 or (v1 < 20 and intrc(v2) < 120));
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   110
(1 row)

select count(*) from t_allnull where v1 is not null;
LOG:  statement: select count(*) from t_allnull where v1 is not null;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t_allnull where v1 is null and v2 is not null;
LOG:  statement: select count(*) from t_allnull where v1 is null and v2 is not null;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t_allnull where v1 is null or (v2 is null and v3 is not null);
LOG:  statement: select count(*) from t_allnull where v1 is null or (v2 is null and v3 is not null);
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   200
(1 row)

select count(*) from t1 where falserc(v1);
LOG:  statement: select count(*) from t1 where falserc(v1);
 count 
-------
     0
(1 row)

-- varop
select count(*) from t1 where v1 < v2;
LOG:  statement: select count(*) from t1 where v1 < v2;
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   200
(1 row)

select count(*) from t1 where v2 > v1;
LOG:  statement: select count(*) from t1 where v2 > v1;
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   200
(1 row)

select count(*) from t1 where v1 > v2;
LOG:  statement: select count(*) from t1 where v1 > v2;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 >= v2;
LOG:  statement: select count(*) from t1 where v1 >= v2;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v2 < v1;
LOG:  statement: select count(*) from t1 where v2 < v1;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v2 <= v1;
LOG:  statement: select count(*) from t1 where v2 <= v1;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 = v2;
LOG:  statement: select count(*) from t1 where v1 = v2;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v2 = v1;
LOG:  statement: select count(*) from t1 where v2 = v1;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 < v1; -- stupid case, but still support
LOG:  statement: select count(*) from t1 where v1 < v1;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 > v1; -- stupid case, but still support
LOG:  statement: select count(*) from t1 where v1 > v1;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

-- var + const, unsupport yet
select count(*) from t1 where v1 - 10 > 100;
LOG:  statement: select count(*) from t1 where v1 - 10 > 100;
 count 
-------
   100
(1 row)

select count(*) from t1 where v1 + 10 > 100;
LOG:  statement: select count(*) from t1 where v1 + 10 > 100;
 count 
-------
   110
(1 row)

select count(*) from t1 where v1 - 10 > v2;
LOG:  statement: select count(*) from t1 where v1 - 10 > v2;
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 + 10 > v2;
LOG:  statement: select count(*) from t1 where v1 + 10 > v2;
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 - 10 > (v2 + 100) - 20;
LOG:  statement: select count(*) from t1 where v1 - 10 > (v2 + 100) - 20;
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 + 10 > (v2 + 200) - 10;
LOG:  statement: select count(*) from t1 where v1 + 10 > (v2 + 200) - 10;
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 + v2 > 1000;
LOG:  statement: select count(*) from t1 where v1 + v2 > 1000;
 count 
-------
    50
(1 row)

select count(*) from t1 where v1 + v2 < 1000;
LOG:  statement: select count(*) from t1 where v1 + v2 < 1000;
 count 
-------
   149
(1 row)

select count(*) from t1 where v1 + v2 < v3;
LOG:  statement: select count(*) from t1 where v1 + v2 < v3;
 count 
-------
    99
(1 row)

select count(*) from t1 where intrc(v1) + 10 > v2;
LOG:  statement: select count(*) from t1 where intrc(v1) + 10 > v2;
 count 
-------
     0
(1 row)

-- simply the filter tree
set pax_log_filter_tree to on;
LOG:  statement: set pax_log_filter_tree to on;
select count(*) from t1 where v1 > 10 or intrc(v2) < 120;
LOG:  statement: select count(*) from t1 where v1 > 10 or intrc(v2) < 120;
LOG:  Origin filter tree: 
OrNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── OpNode(opno=97, strategy=1, collation=0, ltypid=23, rtypid=23)
    ├── UnsupportedNode(reason=Unknown Expr)
    └── ConstNode(const_type=23, flags=0)

Final filter tree: 
UnsupportedNode(reason=Unknown Expr)  (seg0 slice1 10.13.9.100:7002 pid=4328)
LOG:  Origin filter tree: 
OrNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── OpNode(opno=97, strategy=1, collation=0, ltypid=23, rtypid=23)
    ├── UnsupportedNode(reason=Unknown Expr)
    └── ConstNode(const_type=23, flags=0)

Final filter tree: 
UnsupportedNode(reason=Unknown Expr)
LOG:  Origin filter tree: 
OrNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── OpNode(opno=97, strategy=1, collation=0, ltypid=23, rtypid=23)
    ├── UnsupportedNode(reason=Unknown Expr)
    └── ConstNode(const_type=23, flags=0)

Final filter tree: 
UnsupportedNode(reason=Unknown Expr)  (seg2 slice1 10.13.9.100:7004 pid=4330)
 count 
-------
   200
(1 row)

select count(*) from t1 where v1 > 10 and intrc(v2) < 120;
LOG:  statement: select count(*) from t1 where v1 > 10 and intrc(v2) < 120;
LOG:  Origin filter tree: 
AndNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── OpNode(opno=97, strategy=1, collation=0, ltypid=23, rtypid=23)
    ├── UnsupportedNode(reason=Unknown Expr)
    └── ConstNode(const_type=23, flags=0)

Final filter tree: 
AndNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── UnsupportedNode(reason=Unknown Expr)  (seg0 slice1 10.13.9.100:7002 pid=4328)
LOG:  Origin filter tree: 
AndNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── OpNode(opno=97, strategy=1, collation=0, ltypid=23, rtypid=23)
    ├── UnsupportedNode(reason=Unknown Expr)
    └── ConstNode(const_type=23, flags=0)

Final filter tree: 
AndNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── UnsupportedNode(reason=Unknown Expr)
LOG:  Origin filter tree: 
AndNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── OpNode(opno=97, strategy=1, collation=0, ltypid=23, rtypid=23)
    ├── UnsupportedNode(reason=Unknown Expr)
    └── ConstNode(const_type=23, flags=0)

Final filter tree: 
AndNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── UnsupportedNode(reason=Unknown Expr)  (seg2 slice1 10.13.9.100:7004 pid=4330)
LOG:  kind file, filter rate: 0 / 2
 count 
-------
     9
(1 row)

select count(*) from t1 where v1 is not null;
LOG:  statement: select count(*) from t1 where v1 is not null;
LOG:  Origin filter tree: 
NullTestNode(flags=129)
  └── VarNode(attrno=2)

Final filter tree: 
NullTestNode(flags=129)
  └── VarNode(attrno=2)  (seg0 slice1 10.13.9.100:7002 pid=4328)
LOG:  Origin filter tree: 
NullTestNode(flags=129)
  └── VarNode(attrno=2)

Final filter tree: 
NullTestNode(flags=129)
  └── VarNode(attrno=2)  (seg2 slice1 10.13.9.100:7004 pid=4330)
LOG:  Origin filter tree: 
NullTestNode(flags=129)
  └── VarNode(attrno=2)

Final filter tree: 
NullTestNode(flags=129)
  └── VarNode(attrno=2)
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   200
(1 row)

reset pax_log_filter_tree;
LOG:  statement: reset pax_log_filter_tree;
reset client_min_messages;
LOG:  statement: reset client_min_messages;
-- IN && bloom filter
create table t_bf(same int, v1 int, v2 int, v3 int, v4 int) using pax with (minmax_columns='v1,v2,v3,v4', bloomfilter_columns='v1,v2,v3,v4');
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'same' as the Cloudberry Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into t_bf values(1, generate_series(1, 100), generate_series(101, 200), generate_series(201, 300), generate_series(301, 400));
insert into t_bf values(1, generate_series(401, 500), generate_series(501, 600), generate_series(601, 700), generate_series(701, 800));
set client_min_messages to log;
select count(*) from t_bf where v1 in (3, 9, -1, '3'::float);
LOG:  statement: select count(*) from t_bf where v1 in (3, 9, -1, '3'::float);
 count 
-------
     2
(1 row)

select count(*) from t_bf where v1 in (1000, 10001);
LOG:  statement: select count(*) from t_bf where v1 in (1000, 10001);
LOG:  Build a readable bloom filter [bytes=8192]
LOG:  Build a readable bloom filter [bytes=8192]
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t_bf where v1 in (11, 10001);
LOG:  statement: select count(*) from t_bf where v1 in (11, 10001);
LOG:  Build a readable bloom filter [bytes=8192]
LOG:  Build a readable bloom filter [bytes=8192]
LOG:  kind file, filter rate: 1 / 2
 count 
-------
     1
(1 row)

select count(*) from t_bf where v1 not in (1000, 10001);
LOG:  statement: select count(*) from t_bf where v1 not in (1000, 10001);
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   200
(1 row)

-- List<> quals
select count(*) from t1 left join t2 on t1.v1 = t2.v1 where t1.v1 > 1 and t2.v1 < 10;
LOG:  statement: select count(*) from t1 left join t2 on t1.v1 = t2.v1 where t1.v1 > 1 and t2.v1 < 10;
LOG:  kind file, filter rate: 1 / 2
LOG:  kind file, filter rate: 1 / 2
 count 
-------
     8
(1 row)

analyze t1;
LOG:  statement: analyze t1;
LOG:  No sparse filter  (seg0 slice1 10.13.9.100:7002 pid=4328)
LOG:  No sparse filter  (seg2 slice1 10.13.9.100:7004 pid=4330)
LOG:  No sparse filter
analyze t2;
LOG:  statement: analyze t2;
LOG:  No sparse filter  (seg0 slice1 10.13.9.100:7002 pid=4328)
LOG:  No sparse filter  (seg2 slice1 10.13.9.100:7004 pid=4330)
LOG:  No sparse filter
WITH t1_cte AS (
        SELECT v1, v2, v3
        FROM t1 where v2 > 0
)
SELECT t2.*
FROM t2
join t1_cte on t1_cte.v1 = t2.v1 
WHERE 
	t1_cte.v2 < 100
    and ((t1_cte.v1 = 42 AND t2.v1 = 43) OR (t1_cte.v1 = 44 AND t2.v2 = 45)) 
    and t2.v1 < 90;
LOG:  statement: WITH t1_cte AS (
        SELECT v1, v2, v3
        FROM t1 where v2 > 0
)
SELECT t2.*
FROM t2
join t1_cte on t1_cte.v1 = t2.v1 
WHERE 
	t1_cte.v2 < 100
    and ((t1_cte.v1 = 42 AND t2.v1 = 43) OR (t1_cte.v1 = 44 AND t2.v2 = 45)) 
    and t2.v1 < 90;
LOG:  kind file, filter rate: 2 / 2
LOG:  kind file, filter rate: 1 / 2
 same | v1 | v2 | v3 | v4 
------+----+----+----+----
(0 rows)

-- coalesce, not support yet 
select count(*) from t1 where coalesce(v1, 2) != 1;
LOG:  statement: select count(*) from t1 where coalesce(v1, 2) != 1;
 count 
-------
   199
(1 row)

set vector.enable_vectorization to on;
LOG:  statement: set vector.enable_vectorization to on;
-- enable vectorization and test again 
-- no filter
select count(*) from t1;
LOG:  statement: select count(*) from t1;
 count 
-------
   200
(1 row)

select count(v1) from t1;
LOG:  statement: select count(v1) from t1;
 count 
-------
   200
(1 row)

select count(1) from t1;
LOG:  statement: select count(1) from t1;
 count 
-------
   200
(1 row)

select count(*) from t_allnull;
LOG:  statement: select count(*) from t_allnull;
 count 
-------
   200
(1 row)

select count(v1) from t_allnull;
LOG:  statement: select count(v1) from t_allnull;
 count 
-------
     0
(1 row)

select count(1) from t_allnull;
LOG:  statement: select count(1) from t_allnull;
 count 
-------
   200
(1 row)

-- basic tests
select count(*) from t1 where v1 > 1 and v1 < 10;
LOG:  statement: select count(*) from t1 where v1 > 1 and v1 < 10;
LOG:  kind file, filter rate: 1 / 2
kind group, filter rate: 0 / 1
 count 
-------
     8
(1 row)

select count(*) from t1 where v1 > 1 and v2 < 110;
LOG:  statement: select count(*) from t1 where v1 > 1 and v2 < 110;
LOG:  kind file, filter rate: 1 / 2
kind group, filter rate: 0 / 1
 count 
-------
     8
(1 row)

select count(*) from t1 where v1 is not null;
LOG:  statement: select count(*) from t1 where v1 is not null;
 count 
-------
   200
(1 row)

select count(*) from t1 where v1 is null;
LOG:  statement: select count(*) from t1 where v1 is null;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where (v1 < 10 and intrc(v2) in (101, 1223, 321));
LOG:  statement: select count(*) from t1 where (v1 < 10 and intrc(v2) in (101, 1223, 321));
LOG:  kind file, filter rate: 1 / 2
 count 
-------
     1
(1 row)

select count(*) from t1 where v1 > 90 or v1 < 10;
LOG:  statement: select count(*) from t1 where v1 > 90 or v1 < 10;
LOG:  kind file, filter rate: 0 / 2
kind group, filter rate: 0 / 2
 count 
-------
   119
(1 row)

select count(*) from t1 where v1 > 90 or v2 < 110;
LOG:  statement: select count(*) from t1 where v1 > 90 or v2 < 110;
LOG:  kind file, filter rate: 0 / 2
kind group, filter rate: 0 / 2
 count 
-------
   119
(1 row)

-- nested exprs
select count(*) from t1 where v1 > 90 and (v1 > 10 or v1 < 20);
LOG:  statement: select count(*) from t1 where v1 > 90 and (v1 > 10 or v1 < 20);
LOG:  kind file, filter rate: 0 / 2
kind group, filter rate: 0 / 2
 count 
-------
   110
(1 row)

select count(*) from t1 where v1 > 10 and (v2 > 110 or v2 < 120);
LOG:  statement: select count(*) from t1 where v1 > 10 and (v2 > 110 or v2 < 120);
LOG:  kind file, filter rate: 0 / 2
kind group, filter rate: 0 / 2
 count 
-------
   190
(1 row)

select count(*) from t1 where v1 > 90 or (v1 > 10 and v1 < 20);
LOG:  statement: select count(*) from t1 where v1 > 90 or (v1 > 10 and v1 < 20);
LOG:  kind file, filter rate: 0 / 2
kind group, filter rate: 0 / 2
 count 
-------
   119
(1 row)

select count(*) from t1 where v1 > 10 or (v2 > 110 and v2 < 120);
LOG:  statement: select count(*) from t1 where v1 > 10 or (v2 > 110 and v2 < 120);
LOG:  kind file, filter rate: 0 / 2
kind group, filter rate: 0 / 2
 count 
-------
   190
(1 row)

select count(*) from t1 where v1 > 90 or (v1 > 10 and (v1 < 20 or v2 < 120));
LOG:  statement: select count(*) from t1 where v1 > 90 or (v1 > 10 and (v1 < 20 or v2 < 120));
LOG:  kind file, filter rate: 0 / 2
kind group, filter rate: 0 / 2
 count 
-------
   119
(1 row)

select count(*) from t1 where v1 > 90 and (v1 > 10 or (v1 < 20 and v2 < 120));
LOG:  statement: select count(*) from t1 where v1 > 90 and (v1 > 10 or (v1 < 20 and v2 < 120));
LOG:  kind file, filter rate: 0 / 2
kind group, filter rate: 0 / 2
 count 
-------
   110
(1 row)

select count(*) from t1 where v1 > 90 and (v1 > 10 or (v1 < 20 and intrc(v2) < 120));
LOG:  statement: select count(*) from t1 where v1 > 90 and (v1 > 10 or (v1 < 20 and intrc(v2) < 120));
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   110
(1 row)

select count(*) from t_allnull where v1 is not null;
LOG:  statement: select count(*) from t_allnull where v1 is not null;
 count 
-------
     0
(1 row)

select count(*) from t_allnull where v1 is null and v2 is not null;
LOG:  statement: select count(*) from t_allnull where v1 is null and v2 is not null;
LOG:  kind file, filter rate: 0 / 2
kind group, filter rate: 0 / 2  (seg0 slice1 10.13.9.100:7002 pid=4328)
 count 
-------
     0
(1 row)

select count(*) from t_allnull where v1 is null or (v2 is null and v3 is not null);
LOG:  statement: select count(*) from t_allnull where v1 is null or (v2 is null and v3 is not null);
LOG:  kind file, filter rate: 0 / 2
kind group, filter rate: 0 / 2  (seg0 slice1 10.13.9.100:7002 pid=4328)
 count 
-------
   200
(1 row)

select count(*) from t1 where falserc(v1);
LOG:  statement: select count(*) from t1 where falserc(v1);
 count 
-------
     0
(1 row)

-- varop
select count(*) from t1 where v1 < v2;
LOG:  statement: select count(*) from t1 where v1 < v2;
LOG:  kind file, filter rate: 0 / 2
kind group, filter rate: 0 / 2
 count 
-------
   200
(1 row)

select count(*) from t1 where v2 > v1;
LOG:  statement: select count(*) from t1 where v2 > v1;
LOG:  kind file, filter rate: 0 / 2
kind group, filter rate: 0 / 2
 count 
-------
   200
(1 row)

select count(*) from t1 where v1 > v2;
LOG:  statement: select count(*) from t1 where v1 > v2;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 >= v2;
LOG:  statement: select count(*) from t1 where v1 >= v2;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v2 < v1;
LOG:  statement: select count(*) from t1 where v2 < v1;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v2 <= v1;
LOG:  statement: select count(*) from t1 where v2 <= v1;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 = v2;
LOG:  statement: select count(*) from t1 where v1 = v2;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v2 = v1;
LOG:  statement: select count(*) from t1 where v2 = v1;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 < v1; -- stupid case, but still support
LOG:  statement: select count(*) from t1 where v1 < v1;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 > v1; -- stupid case, but still support
LOG:  statement: select count(*) from t1 where v1 > v1;
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

-- var + const, unsupport yet
select count(*) from t1 where v1 - 10 > 100;
LOG:  statement: select count(*) from t1 where v1 - 10 > 100;
 count 
-------
   100
(1 row)

select count(*) from t1 where v1 + 10 > 100;
LOG:  statement: select count(*) from t1 where v1 + 10 > 100;
 count 
-------
   110
(1 row)

select count(*) from t1 where v1 - 10 > v2;
LOG:  statement: select count(*) from t1 where v1 - 10 > v2;
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 + 10 > v2;
LOG:  statement: select count(*) from t1 where v1 + 10 > v2;
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 - 10 > (v2 + 100) - 20;
LOG:  statement: select count(*) from t1 where v1 - 10 > (v2 + 100) - 20;
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 + 10 > (v2 + 200) - 10;
LOG:  statement: select count(*) from t1 where v1 + 10 > (v2 + 200) - 10;
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 + v2 > 1000;
LOG:  statement: select count(*) from t1 where v1 + v2 > 1000;
 count 
-------
    50
(1 row)

select count(*) from t1 where v1 + v2 < 1000;
LOG:  statement: select count(*) from t1 where v1 + v2 < 1000;
 count 
-------
   149
(1 row)

select count(*) from t1 where v1 + v2 < v3;
LOG:  statement: select count(*) from t1 where v1 + v2 < v3;
 count 
-------
    99
(1 row)

select count(*) from t1 where intrc(v1) + 10 > v2;
LOG:  statement: select count(*) from t1 where intrc(v1) + 10 > v2;
 count 
-------
     0
(1 row)

-- simply the filter tree
set pax_log_filter_tree to on;
LOG:  statement: set pax_log_filter_tree to on;
select count(*) from t1 where v1 > 10 or intrc(v2) < 120;
LOG:  statement: select count(*) from t1 where v1 > 10 or intrc(v2) < 120;
LOG:  Origin filter tree: 
OrNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── OpNode(opno=97, strategy=1, collation=0, ltypid=23, rtypid=23)
    ├── UnsupportedNode(reason=Unknown Expr)
    └── ConstNode(const_type=23, flags=0)

Final filter tree: 
UnsupportedNode(reason=Unknown Expr)  (seg0 slice1 10.13.9.100:7002 pid=4328)
LOG:  Origin filter tree: 
OrNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── OpNode(opno=97, strategy=1, collation=0, ltypid=23, rtypid=23)
    ├── UnsupportedNode(reason=Unknown Expr)
    └── ConstNode(const_type=23, flags=0)

Final filter tree: 
UnsupportedNode(reason=Unknown Expr)  (seg2 slice1 10.13.9.100:7004 pid=4330)
LOG:  Origin filter tree: 
OrNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── OpNode(opno=97, strategy=1, collation=0, ltypid=23, rtypid=23)
    ├── UnsupportedNode(reason=Unknown Expr)
    └── ConstNode(const_type=23, flags=0)

Final filter tree: 
UnsupportedNode(reason=Unknown Expr)
 count 
-------
   200
(1 row)

select count(*) from t1 where v1 > 10 and intrc(v2) < 120;
LOG:  statement: select count(*) from t1 where v1 > 10 and intrc(v2) < 120;
LOG:  Origin filter tree: 
AndNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── OpNode(opno=97, strategy=1, collation=0, ltypid=23, rtypid=23)
    ├── UnsupportedNode(reason=Unknown Expr)
    └── ConstNode(const_type=23, flags=0)

Final filter tree: 
AndNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── UnsupportedNode(reason=Unknown Expr)  (seg0 slice1 10.13.9.100:7002 pid=4328)
LOG:  Origin filter tree: 
AndNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── OpNode(opno=97, strategy=1, collation=0, ltypid=23, rtypid=23)
    ├── UnsupportedNode(reason=Unknown Expr)
    └── ConstNode(const_type=23, flags=0)

Final filter tree: 
AndNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── UnsupportedNode(reason=Unknown Expr)
LOG:  Origin filter tree: 
AndNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── OpNode(opno=97, strategy=1, collation=0, ltypid=23, rtypid=23)
    ├── UnsupportedNode(reason=Unknown Expr)
    └── ConstNode(const_type=23, flags=0)

Final filter tree: 
AndNode
  ├── OpNode(opno=521, strategy=5, collation=0, ltypid=23, rtypid=23)
  │  ├── VarNode(attrno=2)
  │  └── ConstNode(const_type=23, flags=0)
  └── UnsupportedNode(reason=Unknown Expr)  (seg2 slice1 10.13.9.100:7004 pid=4330)
LOG:  kind file, filter rate: 0 / 2
 count 
-------
     9
(1 row)

select count(*) from t1 where v1 is not null;
LOG:  statement: select count(*) from t1 where v1 is not null;
LOG:  Origin filter tree: 
UnsupportedNode(reason=Unknown Expr)

Final filter tree: 
UnsupportedNode(reason=Unknown Expr)
LOG:  Origin filter tree: 
UnsupportedNode(reason=Unknown Expr)

Final filter tree: 
UnsupportedNode(reason=Unknown Expr)  (seg0 slice1 10.13.9.100:7002 pid=4328)
LOG:  Origin filter tree: 
UnsupportedNode(reason=Unknown Expr)

Final filter tree: 
UnsupportedNode(reason=Unknown Expr)  (seg2 slice1 10.13.9.100:7004 pid=4330)
LOG:  Origin filter tree: 
UnsupportedNode(reason=Unknown Expr)

Final filter tree: 
UnsupportedNode(reason=Unknown Expr)
 count 
-------
   200
(1 row)

reset pax_log_filter_tree;
LOG:  statement: reset pax_log_filter_tree;
-- IN && min/max
select count(*) from t1 where v1 in (3, 9, -1, '3'::float); -- not support cast yet
LOG:  statement: select count(*) from t1 where v1 in (3, 9, -1, '3'::float);
 count 
-------
     2
(1 row)

select count(*) from t1 where v1 in (1000, 10001);
LOG:  statement: select count(*) from t1 where v1 in (1000, 10001);
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 in (1000, 10001, NULL);
LOG:  statement: select count(*) from t1 where v1 in (1000, 10001, NULL);
LOG:  kind file, filter rate: 2 / 2
 count 
-------
     0
(1 row)

select count(*) from t1 where v1 not in (1000, 10001); -- not work
LOG:  statement: select count(*) from t1 where v1 not in (1000, 10001);
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   200
(1 row)

select count(*) from t1 where not (v2 < 1000 and v1 in (1000, 10001));
LOG:  statement: select count(*) from t1 where not (v2 < 1000 and v1 in (1000, 10001));
LOG:  kind file, filter rate: 0 / 2
 count 
-------
   200
(1 row)

WITH t1_cte AS (
        SELECT v1, v2, v3
        FROM t1 where v2 > 0
)
SELECT t2.*
FROM t2
join t1_cte on t1_cte.v1 = t2.v1 
WHERE 
	t1_cte.v2 < 100
    and ((t1_cte.v1 = 42 AND t2.v1 = 43) OR (t1_cte.v1 = 44 AND t2.v2 = 45)) 
    and t2.v1 < 90;
LOG:  statement: WITH t1_cte AS (
        SELECT v1, v2, v3
        FROM t1 where v2 > 0
)
SELECT t2.*
FROM t2
join t1_cte on t1_cte.v1 = t2.v1 
WHERE 
	t1_cte.v2 < 100
    and ((t1_cte.v1 = 42 AND t2.v1 = 43) OR (t1_cte.v1 = 44 AND t2.v2 = 45)) 
    and t2.v1 < 90;
LOG:  kind file, filter rate: 2 / 2
LOG:  kind file, filter rate: 1 / 2
kind group, filter rate: 0 / 1
 same | v1 | v2 | v3 | v4 
------+----+----+----+----
(0 rows)

-- coalesce, not support yet 
select count(*) from t1 where coalesce(v1, 2) != 1;
LOG:  statement: select count(*) from t1 where coalesce(v1, 2) != 1;
 count 
-------
   199
(1 row)

reset client_min_messages;
LOG:  statement: reset client_min_messages;
drop table t1;
drop table t2;
drop table t_allnull;
drop table t_bf;
